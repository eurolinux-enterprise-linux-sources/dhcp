diff -up dhcp-4.1.1-P1/common/options.c.CVE-2012-3571 dhcp-4.1.1-P1/common/options.c
--- dhcp-4.1.1-P1/common/options.c.CVE-2012-3571	2012-07-25 11:48:06.674007340 +0200
+++ dhcp-4.1.1-P1/common/options.c	2012-07-25 11:48:06.702007001 +0200
@@ -3793,11 +3793,13 @@ void do_packet (interface, packet, len,
 			data_string_forget (&dp, MDL);
 		}
 	}
-		
-	if (decoded_packet -> packet_type)
-		dhcp (decoded_packet);
-	else
-		bootp (decoded_packet);
+
+	if (validate_packet(decoded_packet) != 0) {
+		if (decoded_packet->packet_type)
+			dhcp(decoded_packet);
+		else
+			bootp(decoded_packet);
+	}
 
 	/* If the caller kept the packet, they'll have upped the refcnt. */
 	packet_dereference (&decoded_packet, MDL);
@@ -4115,4 +4117,47 @@ add_option(struct option_state *options,
 	return 1;
 }
 
+/**
+ *  Checks if received BOOTP/DHCPv4 packet is sane
+ *
+ * @param packet received, decoded packet
+ *
+ * @return 1 if packet is sane, 0 if it is not
+ */
+int validate_packet(struct packet *packet)
+{
+	struct option_cache *oc = NULL;
+
+	oc = lookup_option (&dhcp_universe, packet->options,
+			    DHO_DHCP_CLIENT_IDENTIFIER);
+	if (oc) {
+		/* Let's check if client-identifier is sane */
+		if (oc->data.len == 0) {
+			log_debug("Dropped DHCPv4 packet with zero-length client-id");
+			return (0);
+
+		} else if (oc->data.len == 1) {
+			/*
+			 * RFC2132, section 9.14 states that minimum length of client-id
+			 * is 2.  We will allow single-character client-ids for now (for
+			 * backwards compatibility), but warn the user that support for
+			 * this is against the standard.
+			 */
+			log_debug("Accepted DHCPv4 packet with one-character client-id - "
+				"a future version of ISC DHCP will reject this");
+		}
+	} else {
+		/* 
+		 * If hlen is 0 we don't have any identifier, we warn the user
+		 * but continue processing the packet as we can.
+		 */
+		if (packet->raw->hlen == 0) {
+			log_debug("Received DHCPv4 packet without client-id"
+				  " option and empty hlen field.");
+		}
+	}
+
+	/* @todo: Add checks for other received options */
 
+	return (1);
+}
diff -up dhcp-4.1.1-P1/includes/dhcpd.h.CVE-2012-3571 dhcp-4.1.1-P1/includes/dhcpd.h
--- dhcp-4.1.1-P1/includes/dhcpd.h.CVE-2012-3571	2012-07-25 11:48:06.000000000 +0200
+++ dhcp-4.1.1-P1/includes/dhcpd.h	2012-07-25 11:50:26.735280691 +0200
@@ -1706,6 +1706,8 @@ void do_packet6(struct interface_info *,
 		int, int, const struct iaddr *, isc_boolean_t);
 int packet6_len_okay(const char *, int);
 
+int validate_packet(struct packet *);
+
 int add_option(struct option_state *options,
 	       unsigned int option_num,
        	       void *data,
