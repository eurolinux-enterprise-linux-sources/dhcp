diff -up dhcp-4.1.1-P1/common/lpf.c.IPoIB-log-id dhcp-4.1.1-P1/common/lpf.c
--- dhcp-4.1.1-P1/common/lpf.c.IPoIB-log-id	2014-02-18 16:10:38.000000000 +0100
+++ dhcp-4.1.1-P1/common/lpf.c	2014-02-18 16:20:19.194243122 +0100
@@ -156,6 +156,8 @@ int if_register_lpf (info)
 void if_register_send (info)
 	struct interface_info *info;
 {
+	int hlen;
+
 	/* If we're using the lpf API for sending and receiving,
 	   we don't need to register this interface twice. */
 #ifndef USE_LPF_RECEIVE
@@ -163,11 +165,15 @@ void if_register_send (info)
 #else
 	info -> wfdesc = info -> rfdesc;
 #endif
+	if (info->hw_address.hbuf[0] == HTYPE_INFINIBAND)
+		hlen = 9;
+	else
+		hlen = info -> hw_address.hlen;
 	if (!quiet_interface_discovery)
 		log_info ("Sending on   LPF/%s/%s%s%s",
 		      info -> name,
 		      print_hw_addr (info -> hw_address.hbuf [0],
-				     info -> hw_address.hlen - 1,
+				     hlen - 1,
 				     &info -> hw_address.hbuf [1]),
 		      (info -> shared_network ? "/" : ""),
 		      (info -> shared_network ?
@@ -177,6 +183,10 @@ void if_register_send (info)
 void if_deregister_send (info)
 	struct interface_info *info;
 {
+	int hlen = info -> hw_address.hlen;
+	if (info->hw_address.hbuf[0] == HTYPE_INFINIBAND)
+		hlen = 9;
+
 	/* don't need to close twice if we are using lpf for sending and
 	   receiving */
 #ifndef USE_LPF_RECEIVE
@@ -189,7 +199,7 @@ void if_deregister_send (info)
 		log_info ("Disabling output on LPF/%s/%s%s%s",
 		      info -> name,
 		      print_hw_addr (info -> hw_address.hbuf [0],
-				     info -> hw_address.hlen - 1,
+				     hlen - 1,
 				     &info -> hw_address.hbuf [1]),
 		      (info -> shared_network ? "/" : ""),
 		      (info -> shared_network ?
@@ -216,7 +226,7 @@ static void lpf_gen_filter_setup (struct
 void if_register_receive (info)
 	struct interface_info *info;
 {
-	int val;
+	int val, hlen;
 
 	/* Open a LPF device and hang it on this interface... */
 	info -> rfdesc = if_register_lpf (info);
@@ -228,7 +238,9 @@ void if_register_receive (info)
 			if (errno != ENOPROTOOPT)
 				log_fatal ("Failed to set auxiliary packet data: %m");
 		}
-	}
+		hlen = info -> hw_address.hlen;
+	} else
+		hlen = 9;
 
 #if defined (HAVE_TR_SUPPORT)
 	if (info -> hw_address.hbuf [0] == HTYPE_IEEE802)
@@ -241,7 +253,7 @@ void if_register_receive (info)
 		log_info ("Listening on LPF/%s/%s%s%s",
 			  info -> name,
 			  print_hw_addr (info -> hw_address.hbuf [0],
-					 info -> hw_address.hlen - 1,
+					 hlen - 1,
 					 &info -> hw_address.hbuf [1]),
 			  (info -> shared_network ? "/" : ""),
 			  (info -> shared_network ?
@@ -251,6 +263,10 @@ void if_register_receive (info)
 void if_deregister_receive (info)
 	struct interface_info *info;
 {
+	int hlen = info -> hw_address.hlen;
+	if (info->hw_address.hbuf[0] == HTYPE_INFINIBAND)
+		hlen = 9;
+
 	/* for LPF this is simple, packet filters are removed when sockets
 	   are closed */
 	close (info -> rfdesc);
@@ -259,7 +275,7 @@ void if_deregister_receive (info)
 		log_info ("Disabling input on LPF/%s/%s%s%s",
 			  info -> name,
 			  print_hw_addr (info -> hw_address.hbuf [0],
-					 info -> hw_address.hlen - 1,
+					 hlen - 1,
 					 &info -> hw_address.hbuf [1]),
 			  (info -> shared_network ? "/" : ""),
 			  (info -> shared_network ?
diff -up dhcp-4.1.1-P1/server/dhcp.c.IPoIB-log-id dhcp-4.1.1-P1/server/dhcp.c
--- dhcp-4.1.1-P1/server/dhcp.c.IPoIB-log-id	2014-02-18 16:10:38.795273195 +0100
+++ dhcp-4.1.1-P1/server/dhcp.c	2014-02-18 16:10:38.869272172 +0100
@@ -76,6 +76,42 @@ const int dhcp_type_name_max = ((sizeof
 # define send_packet trace_packet_send
 #endif
 
+char *print_client_identifier_from_packet (packet)
+	struct packet *packet;
+{
+	struct option_cache *oc;
+	struct data_string client_identifier;
+	char *ci;
+
+	memset (&client_identifier, 0, sizeof client_identifier);
+
+	oc = lookup_option (&dhcp_universe, packet -> options,
+			DHO_DHCP_CLIENT_IDENTIFIER);
+	if (oc &&
+	    evaluate_option_cache (&client_identifier,
+				    packet, (struct lease *)0,
+				    (struct client_state *)0,
+				    packet -> options,
+				    (struct option_state *)0,
+				    &global_scope, oc, MDL)) {
+		ci = print_hw_addr (HTYPE_INFINIBAND, client_identifier.len, client_identifier.data);
+		data_string_forget (&client_identifier, MDL);
+		return ci;
+	} else
+		return "\"no client id\"";
+}
+
+char *print_hw_addr_or_client_id (packet)
+	struct packet *packet;
+{
+	if (packet -> raw -> htype == HTYPE_INFINIBAND)
+		return print_client_identifier_from_packet (packet);
+	else
+		return print_hw_addr (packet -> raw -> htype,
+				      packet -> raw -> hlen,
+				      packet -> raw -> chaddr);
+}
+
 void
 dhcp (struct packet *packet) {
 	int ms_nulltp = 0;
@@ -104,9 +140,7 @@ dhcp (struct packet *packet) {
 		
 		log_info("%s from %s via %s: %s", s,
 			 (packet->raw->htype
-			  ? print_hw_addr(packet->raw->htype,
-					  packet->raw->hlen,
-					  packet->raw->chaddr)
+			  ? print_hw_addr_or_client_id (packet)
 			  : "<no identifier>"),
 			 packet->raw->giaddr.s_addr
 			 ? inet_ntoa(packet->raw->giaddr)
@@ -288,9 +322,7 @@ void dhcpdiscover (packet, ms_nulltp)
 	 */
 	snprintf (msgbuf, sizeof msgbuf, "DHCPDISCOVER from %s %s%s%svia %s",
 		 (packet -> raw -> htype
-		  ? print_hw_addr (packet -> raw -> htype,
-				   packet -> raw -> hlen,
-				   packet -> raw -> chaddr)
+		  ? print_hw_addr_or_client_id (packet)
 		  : (lease
 		     ? print_hex_1(lease->uid_len, lease->uid, 60)
 		     : "<no identifier>")),
@@ -473,9 +505,7 @@ void dhcprequest (packet, ms_nulltp, ip_
 		 "DHCPREQUEST for %s%s from %s %s%s%svia %s",
 		 piaddr (cip), smbuf,
 		 (packet -> raw -> htype
-		  ? print_hw_addr (packet -> raw -> htype,
-				   packet -> raw -> hlen,
-				   packet -> raw -> chaddr)
+		  ? print_hw_addr_or_client_id (packet)
 		  : (lease
 		     ? print_hex_1(lease->uid_len, lease->uid, 60)
 		     : "<no identifier>")),
@@ -688,9 +718,7 @@ void dhcprelease (packet, ms_nulltp)
 	if ((oc = lookup_option (&dhcp_universe, packet -> options,
 				 DHO_DHCP_REQUESTED_ADDRESS))) {
 		log_info ("DHCPRELEASE from %s specified requested-address.",
-		      print_hw_addr (packet -> raw -> htype,
-				     packet -> raw -> hlen,
-				     packet -> raw -> chaddr));
+		      print_hw_addr_or_client_id (packet));
 	}
 
 	oc = lookup_option (&dhcp_universe, packet -> options,
@@ -764,9 +792,7 @@ void dhcprelease (packet, ms_nulltp)
 		 "DHCPRELEASE of %s from %s %s%s%svia %s (%sfound)",
 		 cstr,
 		 (packet -> raw -> htype
-		  ? print_hw_addr (packet -> raw -> htype,
-				   packet -> raw -> hlen,
-				   packet -> raw -> chaddr)
+		  ? print_hw_addr_or_client_id (packet)
 		  : (lease
 		     ? print_hex_1(lease->uid_len, lease->uid, 60)
 		     : "<no identifier>")),
@@ -855,9 +881,7 @@ void dhcpdecline (packet, ms_nulltp)
 		 "DHCPDECLINE of %s from %s %s%s%svia %s",
 		 piaddr (cip),
 		 (packet -> raw -> htype
-		  ? print_hw_addr (packet -> raw -> htype,
-				   packet -> raw -> hlen,
-				   packet -> raw -> chaddr)
+		  ? print_hw_addr_or_client_id (packet)
 		  : (lease
 		     ? print_hex_1(lease->uid_len, lease->uid, 60)
 		     : "<no identifier>")),
@@ -1274,8 +1298,7 @@ void dhcpinform (packet, ms_nulltp)
 	/* Report what we're sending. */
 	snprintf(msgbuf, sizeof msgbuf, "DHCPACK to %s (%s) via", piaddr(cip),
 		 (packet->raw->htype && packet->raw->hlen) ?
-			print_hw_addr(packet->raw->htype, packet->raw->hlen,
-				      packet->raw->chaddr) :
+			print_hw_addr_or_client_id (packet) :
 			"<no client hardware address>");
 	log_info("%s %s", msgbuf, gip.len ? piaddr(gip) :
 					    packet->interface->name);
@@ -1394,9 +1417,7 @@ void nak_lease (packet, cip)
 	/* Report what we're sending... */
 	log_info ("DHCPNAK on %s to %s via %s",
 	      piaddr (*cip),
-	      print_hw_addr (packet -> raw -> htype,
-			     packet -> raw -> hlen,
-			     packet -> raw -> chaddr),
+	      print_hw_addr_or_client_id (packet),
 	      packet -> raw -> giaddr.s_addr
 	      ? inet_ntoa (packet -> raw -> giaddr)
 	      : packet -> interface -> name);
@@ -3072,7 +3093,7 @@ void dhcp_reply (lease)
 		   ? (state -> offer == DHCPACK ? "DHCPACK" : "DHCPOFFER")
 		   : "BOOTREPLY"),
 		  piaddr (lease -> ip_addr),
-		  (lease -> hardware_addr.hlen
+		  (lease -> hardware_addr.hlen > 1
 		   ? print_hw_addr (lease -> hardware_addr.hbuf [0],
 				    lease -> hardware_addr.hlen - 1,
 				    &lease -> hardware_addr.hbuf [1])
@@ -3562,10 +3583,7 @@ int find_lease (struct lease **lp,
 			if (uid_lease) {
 			    if (uid_lease->binding_state == FTS_ACTIVE) {
 				log_error ("client %s has duplicate%s on %s",
-					   (print_hw_addr
-					    (packet -> raw -> htype,
-					     packet -> raw -> hlen,
-					     packet -> raw -> chaddr)),
+					   (print_hw_addr_or_client_id (packet)),
 					   " leases",
 					   (ip_lease -> subnet ->
 					    shared_network -> name));
@@ -3732,9 +3750,7 @@ int find_lease (struct lease **lp,
 			log_error("uid lease %s for client %s is duplicate "
 				  "on %s",
 				  piaddr(uid_lease->ip_addr),
-				  print_hw_addr(packet->raw->htype,
-						packet->raw->hlen,
-						packet->raw->chaddr),
+				  print_hw_addr_or_client_id (packet),
 				  uid_lease->subnet->shared_network->name);
 
 			if (!packet -> raw -> ciaddr.s_addr &&
