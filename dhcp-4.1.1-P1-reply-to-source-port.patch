diff -up dhcp-4.1.1-P1/includes/site.h.reply-to-source-port dhcp-4.1.1-P1/includes/site.h
--- dhcp-4.1.1-P1/includes/site.h.reply-to-source-port	2009-04-30 20:43:42.000000000 +0200
+++ dhcp-4.1.1-P1/includes/site.h	2013-04-22 14:23:14.639271920 +0200
@@ -195,3 +195,8 @@
    traces. */
 
 /* #define TRACING */
+
+/* Define this if you want a DHCPv6 server to send replies to the
+   source port of the message it received.  This is useful for testing
+   but is only included for backwards compatibility. */
+/* #define REPLY_TO_SOURCE_PORT */
diff -up dhcp-4.1.1-P1/server/dhcpv6.c.reply-to-source-port dhcp-4.1.1-P1/server/dhcpv6.c
--- dhcp-4.1.1-P1/server/dhcpv6.c.reply-to-source-port	2013-04-22 14:21:39.000000000 +0200
+++ dhcp-4.1.1-P1/server/dhcpv6.c	2013-04-22 14:22:56.414525398 +0200
@@ -6000,8 +6000,18 @@ dhcpv6(struct packet *packet) {
 		} else {
 			to_addr.sin6_port = remote_port;
 		}
-/* For testing, we reply to the sending port, so we don't need a root client */
+
+#if defined (REPLY_TO_SOURCE_PORT)
+		/*
+		 * This appears to have been included for testing so we would
+		 * not need a root client, but was accidently left in the
+		 * final code.  We continue to include it in case
+		 * some users have come to rely upon it, but leave
+		 * it off by default as it's a bad idea.
+		 */
 		to_addr.sin6_port = packet->client_port;
+#endif
+
 		memcpy(&to_addr.sin6_addr, packet->client_addr.iabuf, 
 		       sizeof(to_addr.sin6_addr));
 
